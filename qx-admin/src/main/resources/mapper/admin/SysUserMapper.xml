<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qianxun.admin.mapper.SysUserMapper">
    <resultMap id="BaseResultMap" type="com.qianxun.admin.model.entity.SysUser">
        <id column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER" property="userId"/>
        <result column="dept_id" javaType="java.lang.Integer" jdbcType="INTEGER" property="deptId"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="identification" jdbcType="VARCHAR" property="identification"/>
        <result column="phone" javaType="java.lang.String" jdbcType="VARCHAR" property="phone"/>
        <result column="email" javaType="java.lang.String" jdbcType="VARCHAR" property="email"/>
        <result column="avatar" javaType="java.lang.String" jdbcType="VARCHAR" property="avatar"/>
        <result column="status" javaType="java.lang.Integer" jdbcType="INTEGER" property="status"/>
        <result column="user_name" javaType="java.lang.String" jdbcType="VARCHAR" property="userName"/>
        <result column="reset_password_token" javaType="java.lang.String" jdbcType="VARCHAR"
                property="resetPasswordToken"/>
        <result column="password_encrypted" javaType="java.lang.String" jdbcType="VARCHAR"
                property="passwordEncrypted"/>
        <result column="created_at" javaType="java.util.Date" jdbcType="TIMESTAMP" property="createdAt"/>
        <result column="updated_at" javaType="java.util.Date" jdbcType="TIMESTAMP" property="updatedAt"/>
        <result column="current_token" javaType="java.lang.String" jdbcType="VARCHAR" property="currentToken"/>
        <result column="current_sign_in_at" javaType="java.util.Date" jdbcType="TIMESTAMP" property="currentSignInAt"/>
        <result column="last_sign_in_at" javaType="java.util.Date" jdbcType="TIMESTAMP" property="lastSignInAt"/>
        <result column="sign_in_count" javaType="java.lang.Integer" jdbcType="INTEGER" property="signInCount"/>
    </resultMap>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select * from sys_user
           where user_id = #{id,jdbcType=INTEGER}
        </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select * from sys_user
    </select>
    <insert id="insert" parameterType="com.qianxun.admin.model.entity.SysUser">
        <selectKey keyProperty="userId" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into sys_user (
        user_id,
        dept_id,
        `name`,
        identification,
        phone,
        email,
        avatar,
        status,
        user_name,
        reset_password_token,
        password_encrypted,
        created_at,
        updated_at,
        current_token,
        current_sign_in_at,
        last_sign_in_at,
        sign_in_count
        )
        values (
        #{userId,jdbcType=INTEGER},
        #{deptId,jdbcType=INTEGER},
        #{name,jdbcType=VARCHAR},
        #{identification,jdbcType=VARCHAR},
        #{phone,jdbcType=VARCHAR},
        #{email,jdbcType=VARCHAR},
        #{avatar,jdbcType=VARCHAR},
        #{status,jdbcType=INTEGER},
        #{userName,jdbcType=VARCHAR},
        #{resetPasswordToken,jdbcType=VARCHAR},
        #{passwordEncrypted,jdbcType=VARCHAR},
        #{createdAt,jdbcType=TIMESTAMP},
        #{updatedAt,jdbcType=TIMESTAMP},
        #{currentToken,jdbcType=VARCHAR},
        #{currentSignInAt,jdbcType=TIMESTAMP},
        #{lastSignInAt,jdbcType=TIMESTAMP},
        #{signInCount,jdbcType=INTEGER}
        )
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.qianxun.admin.model.entity.SysUser">
      update sys_user set
        user_id = #{userId,jdbcType=INTEGER},
        dept_id = #{deptId,jdbcType=INTEGER},
        `name` = #{name,jdbcType=VARCHAR},
        identification = #{identification,jdbcType=VARCHAR},
        phone = #{phone,jdbcType=VARCHAR},
        email = #{email,jdbcType=VARCHAR},
        avatar = #{avatar,jdbcType=VARCHAR},
        status = #{status,jdbcType=INTEGER},
        user_name = #{userName,jdbcType=VARCHAR},
        reset_password_token = #{resetPasswordToken,jdbcType=VARCHAR},
        password_encrypted = #{passwordEncrypted,jdbcType=VARCHAR},
        created_at = #{createdAt,jdbcType=TIMESTAMP},
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
        current_token = #{currentToken,jdbcType=VARCHAR},
        current_sign_in_at = #{currentSignInAt,jdbcType=TIMESTAMP},
        last_sign_in_at = #{lastSignInAt,jdbcType=TIMESTAMP},
        sign_in_count = #{signInCount,jdbcType=INTEGER}
       where user_id = #{userId,jdbcType=INTEGER}
    </update>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from sys_user where user_id = #{user_id,jdbcType=INTEGER}
    </delete>
    <select id="columnStrExists" resultType="java.lang.Integer">
        SELECT count(*) AS `count`
        FROM sys_user
        WHERE ${columnName} = #{value}
    </select>
</mapper>
